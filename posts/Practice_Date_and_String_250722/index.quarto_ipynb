{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "aae578eb",
   "metadata": {},
   "source": [
    "---\n",
    "title: \"Practice_Date_and_String_250722\"\n",
    "author: \"Seong Yoolim\"\n",
    "date: \"2025-07-22\"\n",
    "categories: [code, study]\n",
    "---\n",
    "\n",
    "# 날짜형, 문자형 다루기 연습 - 자전거 시스템의 대여 기록"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5cbad4ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 435 entries, 0 to 434\n",
      "Data columns (total 12 columns):\n",
      " #   Column      Non-Null Count  Dtype  \n",
      "---  ------      --------------  -----  \n",
      " 0   datetime    435 non-null    object \n",
      " 1   season      435 non-null    int64  \n",
      " 2   holiday     435 non-null    int64  \n",
      " 3   workingday  435 non-null    int64  \n",
      " 4   weather     435 non-null    int64  \n",
      " 5   temp        435 non-null    float64\n",
      " 6   atemp       435 non-null    float64\n",
      " 7   humidity    435 non-null    int64  \n",
      " 8   windspeed   435 non-null    float64\n",
      " 9   casual      435 non-null    int64  \n",
      " 10  registered  435 non-null    int64  \n",
      " 11  count       435 non-null    int64  \n",
      "dtypes: float64(3), int64(8), object(1)\n",
      "memory usage: 40.9+ KB\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 435 entries, 0 to 434\n",
      "Data columns (total 12 columns):\n",
      " #   Column      Non-Null Count  Dtype         \n",
      "---  ------      --------------  -----         \n",
      " 0   datetime    435 non-null    datetime64[ns]\n",
      " 1   season      435 non-null    object        \n",
      " 2   holiday     435 non-null    object        \n",
      " 3   workingday  435 non-null    object        \n",
      " 4   weather     435 non-null    int64         \n",
      " 5   temp        435 non-null    float64       \n",
      " 6   atemp       435 non-null    float64       \n",
      " 7   humidity    435 non-null    int64         \n",
      " 8   windspeed   435 non-null    float64       \n",
      " 9   casual      435 non-null    int64         \n",
      " 10  registered  435 non-null    int64         \n",
      " 11  count       435 non-null    int64         \n",
      "dtypes: datetime64[ns](1), float64(3), int64(5), object(3)\n",
      "memory usage: 40.9+ KB\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "# 날짜형, 문자형 다루기 연습 - 자전거 시스템의 대여 기록\n",
    "df = pd.read_csv('bike_data.csv')\n",
    "df.head()\n",
    "df.info()\n",
    "# 데이터 속성 변환\n",
    "df = df.astype({'datetime' : 'datetime64[ns]', 'weather' : 'int64', \n",
    "                'season' : 'object', 'workingday' : 'object', \n",
    "                'holiday' : 'object'})\n",
    "df.head()\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19ae5815",
   "metadata": {},
   "source": [
    "1.  계절(season) == 1일 때, 가장 대여량이 많은 시간대(hour)을 구하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "aa16bd8d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "count가 가장 큰 hour는 17 이며, 대여량은 597 입니다.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_23336\\1410268735.py:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df_season1['hour'] = df['datetime'].dt.hour\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df_season1 = df[df['season'] == 1]\n",
    "df_season1['hour'] = df['datetime'].dt.hour\n",
    "df_season1\n",
    "#df_season1_max = df_season1.groupby('hour')['count'].mean()\n",
    "#max_count = df_season1_max.max()\n",
    "#max_hour = df_season1_max.idxmax()\n",
    "#max(df[df['season'] == 1]['count'])\n",
    "max_count = df_season1.loc[df_season1['count'].idxmax()]['count']\n",
    "max_count\n",
    "max_time = df_season1.loc[df_season1['count'].idxmax()]['datetime']\n",
    "max_hour= max_time.hour\n",
    "max_hour\n",
    "print(\"count가 가장 큰 hour는\", max_hour, \"이며, 대여량은\", max_count, \"입니다.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d58e6939",
   "metadata": {},
   "source": [
    "2.  각 계절(season)별 평균 대여량(count)을 구하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e59b69b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "season\n",
       "1    103.169811\n",
       "2    218.803922\n",
       "3    265.500000\n",
       "4    218.581197\n",
       "Name: count, dtype: float64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df.groupby('season')['count'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "702a820c",
   "metadata": {},
   "source": [
    "3.  특정 달(month) 동안의 총 대여량(count)을 구하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6c827b7e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "month\n",
       "1      2567\n",
       "2      4849\n",
       "3      3520\n",
       "4      5911\n",
       "5     10082\n",
       "6      6325\n",
       "7      8517\n",
       "8     10480\n",
       "9     10208\n",
       "10    10574\n",
       "11     6631\n",
       "12     8369\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df['month'] = df['datetime'].dt.month\n",
    "df.groupby('month')['count'].sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6842098e",
   "metadata": {},
   "source": [
    "4.  가장 대여량이 많은 날짜를 구하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0c2ddf64",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "가장 대여량이 많은 날짜는 2012-05-11 이며, 대여량은 1398 입니다.\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df['date'] = df['datetime'].dt.date\n",
    "\n",
    "df_max_count = df.groupby('date')['count'].sum()\n",
    "df_max_count\n",
    "df_max_count.max()\n",
    "df_max_count.idxmax()\n",
    "print(\"가장 대여량이 많은 날짜는\", df_max_count.idxmax(), \"이며, 대여량은\", df_max_count.max(), \"입니다.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed13b92b",
   "metadata": {},
   "source": [
    "5.  시간대(hour)별 평균 대여량(count)을 구하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "dbeafc81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "datetime\n",
       "0      43.500000\n",
       "1      52.714286\n",
       "2      32.842105\n",
       "3      12.000000\n",
       "4       6.687500\n",
       "5      17.750000\n",
       "6      58.705882\n",
       "7     208.937500\n",
       "8     483.055556\n",
       "9     260.117647\n",
       "10    144.130435\n",
       "11    182.000000\n",
       "12    277.533333\n",
       "13    290.600000\n",
       "14    266.842105\n",
       "15    255.666667\n",
       "16    373.052632\n",
       "17    519.200000\n",
       "18    447.769231\n",
       "19    322.103448\n",
       "20    210.083333\n",
       "21    196.619048\n",
       "22    113.560000\n",
       "23     77.352941\n",
       "Name: count, dtype: float64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df['hour'] = df['datetime'].dt.hour\n",
    "df_hour_avg = df.groupby('hour')['count'].mean()\n",
    "hour = df['datetime'].dt.hour\n",
    "# 외부 배열이라도 길이가 같으면 groupby 가능\n",
    "hour = df['datetime'].dt.hour\n",
    "type(hour)\n",
    "df_hour_avg = df.groupby(hour)['count'].mean()\n",
    "df_hour_avg"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4b45b9f",
   "metadata": {},
   "source": [
    "6.  특정 요일(weekday) 동안의 총 대여량(count)을 구하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5d36f5da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Friday 동안의 총 대여량은 16315 입니다.\n",
      "Monday 동안의 총 대여량은 10191 입니다.\n",
      "Saturday 동안의 총 대여량은 12105 입니다.\n",
      "Sunday 동안의 총 대여량은 11066 입니다.\n",
      "Thursday 동안의 총 대여량은 13319 입니다.\n",
      "Tuesday 동안의 총 대여량은 11198 입니다.\n",
      "Wednesday 동안의 총 대여량은 13839 입니다.\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df['weekday'] = df['datetime'].dt.day_name() # weekday 쓰면 숫자로 나옴\n",
    "df\n",
    "df_grouped = df.groupby('weekday')['count'].sum()\n",
    "df_grouped = pd.DataFrame(df_grouped)\n",
    "df_grouped = df_grouped.reset_index()\n",
    "df_grouped\n",
    "weekday = df_grouped.iloc[:,0]\n",
    "weekday\n",
    "count_weekday = df_grouped.iloc[:,1]\n",
    "count_weekday\n",
    "for i in range(0, 7):\n",
    "    print(f\"{weekday[i]} 동안의 총 대여량은 {count_weekday[i]} 입니다.\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b6a8eb8",
   "metadata": {},
   "source": [
    "7.   주어진 Bike Sharing 데이터를 사용하여 넓은 형식(wide format)에서 긴 형식(long format)으로 변환하시오. casual과 registered 열을 하나의 열로 변환하고, 각 기록의 대여 유형과 대여 수를 포함하는 긴 형식 데이터프레임을 만드시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "dd87e505",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>season</th>\n",
       "      <th>대여 유형</th>\n",
       "      <th>대여 수</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2011-09-05 17:00:00</td>\n",
       "      <td>3</td>\n",
       "      <td>casual</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2011-05-17 11:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>casual</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2011-11-10 09:00:00</td>\n",
       "      <td>4</td>\n",
       "      <td>casual</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2011-10-13 07:00:00</td>\n",
       "      <td>4</td>\n",
       "      <td>casual</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2011-10-15 14:00:00</td>\n",
       "      <td>4</td>\n",
       "      <td>casual</td>\n",
       "      <td>242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>865</th>\n",
       "      <td>2011-04-07 16:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>registered</td>\n",
       "      <td>161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>866</th>\n",
       "      <td>2011-09-03 22:00:00</td>\n",
       "      <td>3</td>\n",
       "      <td>registered</td>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>867</th>\n",
       "      <td>2011-11-12 22:00:00</td>\n",
       "      <td>4</td>\n",
       "      <td>registered</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>868</th>\n",
       "      <td>2012-04-11 23:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>registered</td>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>869</th>\n",
       "      <td>2012-01-06 09:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>registered</td>\n",
       "      <td>237</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>870 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               datetime season       대여 유형  대여 수\n",
       "0   2011-09-05 17:00:00      3      casual    37\n",
       "1   2011-05-17 11:00:00      2      casual    26\n",
       "2   2011-11-10 09:00:00      4      casual    23\n",
       "3   2011-10-13 07:00:00      4      casual     5\n",
       "4   2011-10-15 14:00:00      4      casual   242\n",
       "..                  ...    ...         ...   ...\n",
       "865 2011-04-07 16:00:00      2  registered   161\n",
       "866 2011-09-03 22:00:00      3  registered    96\n",
       "867 2011-11-12 22:00:00      4  registered    88\n",
       "868 2012-04-11 23:00:00      2  registered    52\n",
       "869 2012-01-06 09:00:00      1  registered   237\n",
       "\n",
       "[870 rows x 4 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df_long = df.melt(value_vars=['casual', 'registered'],\n",
    "        id_vars=['datetime','season'],\n",
    "        var_name='대여 유형',\n",
    "        value_name='대여 수'\n",
    "        )\n",
    "df_long"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "284c8c15",
   "metadata": {},
   "source": [
    "8.  이전에 생성한 긴 형식 데이터프레임을 활용하여 각 계절(season)별로 casual과 registered 사용자의 평균 대여 수(count)를 구하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5aa71488",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>season</th>\n",
       "      <th>user_type</th>\n",
       "      <th>user_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>casual</td>\n",
       "      <td>14.122642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>registered</td>\n",
       "      <td>89.047170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2</td>\n",
       "      <td>registered</td>\n",
       "      <td>169.813725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>casual</td>\n",
       "      <td>48.990196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>registered</td>\n",
       "      <td>210.372727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>casual</td>\n",
       "      <td>55.127273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>casual</td>\n",
       "      <td>29.709402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4</td>\n",
       "      <td>registered</td>\n",
       "      <td>188.871795</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   season   user_type  user_count\n",
       "0       1      casual   14.122642\n",
       "4       1  registered   89.047170\n",
       "5       2  registered  169.813725\n",
       "1       2      casual   48.990196\n",
       "6       3  registered  210.372727\n",
       "2       3      casual   55.127273\n",
       "3       4      casual   29.709402\n",
       "7       4  registered  188.871795"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df_long_pivot = df_long.pivot_table(\n",
    "    index=\"season\",\n",
    "    values='대여 수',\n",
    "    columns='대여 유형',\n",
    "    aggfunc='mean'\n",
    ").reset_index()\n",
    "df_long_pivot\n",
    "df_pivot = df_long_pivot.melt(\n",
    "    value_vars=['casual', 'registered'],\n",
    "    var_name='user_type',\n",
    "    value_name='user_count',\n",
    "    id_vars='season'\n",
    ")\n",
    "df_pivot.sort_values('season')\n",
    "# groupby\n",
    "# df8.groupby(['season','user_type'])['user_count'].mean().reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db12aa55",
   "metadata": {},
   "source": [
    "# 앱 로그 데이터"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6e347608",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>로그</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-07-18 12:34:56 User: 홍길동 Action: Login ID...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-07-18 12:35:00 User: 김철수 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-07-18 12:36:10 User: 이영희 Action: Logout T...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-07-18 12:37:22 User: 박지성 Action: Login ID...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-07-18 12:38:44 User: 최강타 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2024-07-18 12:39:50 User: 장보고 Action: Logout T...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2024-07-18 12:40:56 User: 홍길동 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2024-07-18 12:41:00 User: 김철수 Action: Login ID...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2024-07-18 12:42:10 User: 이영희 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2024-07-18 12:43:22 User: 박지성 Action: Logout T...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2024-07-18 12:44:44 User: 최강타 Action: Login ID...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2024-07-18 12:45:50 User: 장보고 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2024-07-18 12:46:56 User: 홍길동 Action: Logout T...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2024-07-18 12:47:00 User: 김철수 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2024-07-18 12:48:10 User: 이영희 Action: Login ID...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2024-07-18 12:49:22 User: 박지성 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2024-07-18 12:50:44 User: 최강타 Action: Logout T...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2024-07-18 12:51:50 User: 장보고 Action: Login ID...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2024-07-18 12:52:56 User: 홍길동 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2024-07-18 12:53:00 User: 김철수 Action: Logout T...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2024-07-18 12:54:10 User: 이영희 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2024-07-18 12:55:22 User: 박지성 Action: Login ID...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2024-07-18 12:56:44 User: 최강타 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2024-07-18 12:57:50 User: 장보고 Action: Logout T...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2024-07-18 12:58:56 User: 홍길동 Action: Login ID...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2024-07-18 12:59:00 User: 김철수 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2024-07-18 13:00:10 User: 이영희 Action: Logout T...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2024-07-18 13:01:22 User: 박지성 Action: Purchase...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2024-07-18 13:02:44 User: 최강타 Action: Login ID...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2024-07-18 13:03:50 User: 장보고 Action: Purchase...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   로그\n",
       "0   2024-07-18 12:34:56 User: 홍길동 Action: Login ID...\n",
       "1   2024-07-18 12:35:00 User: 김철수 Action: Purchase...\n",
       "2   2024-07-18 12:36:10 User: 이영희 Action: Logout T...\n",
       "3   2024-07-18 12:37:22 User: 박지성 Action: Login ID...\n",
       "4   2024-07-18 12:38:44 User: 최강타 Action: Purchase...\n",
       "5   2024-07-18 12:39:50 User: 장보고 Action: Logout T...\n",
       "6   2024-07-18 12:40:56 User: 홍길동 Action: Purchase...\n",
       "7   2024-07-18 12:41:00 User: 김철수 Action: Login ID...\n",
       "8   2024-07-18 12:42:10 User: 이영희 Action: Purchase...\n",
       "9   2024-07-18 12:43:22 User: 박지성 Action: Logout T...\n",
       "10  2024-07-18 12:44:44 User: 최강타 Action: Login ID...\n",
       "11  2024-07-18 12:45:50 User: 장보고 Action: Purchase...\n",
       "12  2024-07-18 12:46:56 User: 홍길동 Action: Logout T...\n",
       "13  2024-07-18 12:47:00 User: 김철수 Action: Purchase...\n",
       "14  2024-07-18 12:48:10 User: 이영희 Action: Login ID...\n",
       "15  2024-07-18 12:49:22 User: 박지성 Action: Purchase...\n",
       "16  2024-07-18 12:50:44 User: 최강타 Action: Logout T...\n",
       "17  2024-07-18 12:51:50 User: 장보고 Action: Login ID...\n",
       "18  2024-07-18 12:52:56 User: 홍길동 Action: Purchase...\n",
       "19  2024-07-18 12:53:00 User: 김철수 Action: Logout T...\n",
       "20  2024-07-18 12:54:10 User: 이영희 Action: Purchase...\n",
       "21  2024-07-18 12:55:22 User: 박지성 Action: Login ID...\n",
       "22  2024-07-18 12:56:44 User: 최강타 Action: Purchase...\n",
       "23  2024-07-18 12:57:50 User: 장보고 Action: Logout T...\n",
       "24  2024-07-18 12:58:56 User: 홍길동 Action: Login ID...\n",
       "25  2024-07-18 12:59:00 User: 김철수 Action: Purchase...\n",
       "26  2024-07-18 13:00:10 User: 이영희 Action: Logout T...\n",
       "27  2024-07-18 13:01:22 User: 박지성 Action: Purchase...\n",
       "28  2024-07-18 13:02:44 User: 최강타 Action: Login ID...\n",
       "29  2024-07-18 13:03:50 User: 장보고 Action: Purchase..."
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "# 앱 로그 데이터\n",
    "pd.set_option('display.max_columns', None) # 전체 칼럼 정보 프린트 옵션\n",
    "df = pd.read_csv('logdata.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "12ceff45",
   "metadata": {},
   "source": [
    "9.  로그 칼럼에서 숫자 정보만 추출하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a5e0fc7e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>34</td>\n",
       "      <td>56</td>\n",
       "      <td>12345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>35</td>\n",
       "      <td>00</td>\n",
       "      <td>2000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>36</td>\n",
       "      <td>10</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>37</td>\n",
       "      <td>22</td>\n",
       "      <td>67890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>38</td>\n",
       "      <td>44</td>\n",
       "      <td>1500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>39</td>\n",
       "      <td>50</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>40</td>\n",
       "      <td>56</td>\n",
       "      <td>3500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>41</td>\n",
       "      <td>00</td>\n",
       "      <td>23456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>42</td>\n",
       "      <td>10</td>\n",
       "      <td>3000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>43</td>\n",
       "      <td>22</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>78901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>45</td>\n",
       "      <td>50</td>\n",
       "      <td>4000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>46</td>\n",
       "      <td>56</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>47</td>\n",
       "      <td>00</td>\n",
       "      <td>2500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>10</td>\n",
       "      <td>56789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>22</td>\n",
       "      <td>4500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>50</td>\n",
       "      <td>44</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>51</td>\n",
       "      <td>50</td>\n",
       "      <td>34567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>52</td>\n",
       "      <td>56</td>\n",
       "      <td>5000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>53</td>\n",
       "      <td>00</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>54</td>\n",
       "      <td>10</td>\n",
       "      <td>5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>55</td>\n",
       "      <td>22</td>\n",
       "      <td>12346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>56</td>\n",
       "      <td>44</td>\n",
       "      <td>6000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>57</td>\n",
       "      <td>50</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>58</td>\n",
       "      <td>56</td>\n",
       "      <td>67891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>59</td>\n",
       "      <td>00</td>\n",
       "      <td>6500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>13</td>\n",
       "      <td>00</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>13</td>\n",
       "      <td>01</td>\n",
       "      <td>22</td>\n",
       "      <td>7000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>13</td>\n",
       "      <td>02</td>\n",
       "      <td>44</td>\n",
       "      <td>78902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2024</td>\n",
       "      <td>07</td>\n",
       "      <td>18</td>\n",
       "      <td>13</td>\n",
       "      <td>03</td>\n",
       "      <td>50</td>\n",
       "      <td>7500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       0   1   2   3   4   5      6\n",
       "0   2024  07  18  12  34  56  12345\n",
       "1   2024  07  18  12  35  00   2000\n",
       "2   2024  07  18  12  36  10     30\n",
       "3   2024  07  18  12  37  22  67890\n",
       "4   2024  07  18  12  38  44   1500\n",
       "5   2024  07  18  12  39  50     25\n",
       "6   2024  07  18  12  40  56   3500\n",
       "7   2024  07  18  12  41  00  23456\n",
       "8   2024  07  18  12  42  10   3000\n",
       "9   2024  07  18  12  43  22     45\n",
       "10  2024  07  18  12  44  44  78901\n",
       "11  2024  07  18  12  45  50   4000\n",
       "12  2024  07  18  12  46  56     35\n",
       "13  2024  07  18  12  47  00   2500\n",
       "14  2024  07  18  12  48  10  56789\n",
       "15  2024  07  18  12  49  22   4500\n",
       "16  2024  07  18  12  50  44     50\n",
       "17  2024  07  18  12  51  50  34567\n",
       "18  2024  07  18  12  52  56   5000\n",
       "19  2024  07  18  12  53  00     20\n",
       "20  2024  07  18  12  54  10   5500\n",
       "21  2024  07  18  12  55  22  12346\n",
       "22  2024  07  18  12  56  44   6000\n",
       "23  2024  07  18  12  57  50     55\n",
       "24  2024  07  18  12  58  56  67891\n",
       "25  2024  07  18  12  59  00   6500\n",
       "26  2024  07  18  13  00  10     40\n",
       "27  2024  07  18  13  01  22   7000\n",
       "28  2024  07  18  13  02  44  78902\n",
       "29  2024  07  18  13  03  50   7500"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "# df['로그'].str.extract(r'([\\d+\\W+]+[\\d+\\W+]+[\\d+])', expand=True)\n",
    "df['로그'].str.extract(r'(\\d{4})-(\\d{2})-(\\d{2})\\s+(\\d{2}):(\\d{2}):(\\d{2}).*?(\\d+)', expand=True)\n",
    "df_num = df['로그'].str.extractall(r'(\\d+)')\n",
    "# chat gpt\n",
    "df_num = df_num.groupby(level=0).agg(list)\n",
    "df_num\n",
    "df_num[0].apply(pd.Series)\n",
    "\n",
    "#'(\\d{4})-(\\d{2})-(\\d{2})\\s+(\\d{2}):(\\d{2}):(\\d{2}).*?(\\d+)'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "95248923",
   "metadata": {},
   "source": [
    "10. 로그 칼럼에서 모든 시간 정보를 추출하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0c7f6a58",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-07-18 12:34:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-07-18 12:35:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-07-18 12:36:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-07-18 12:37:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-07-18 12:38:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2024-07-18 12:39:50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2024-07-18 12:40:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2024-07-18 12:41:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2024-07-18 12:42:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2024-07-18 12:43:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2024-07-18 12:44:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2024-07-18 12:45:50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2024-07-18 12:46:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2024-07-18 12:47:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2024-07-18 12:48:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2024-07-18 12:49:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2024-07-18 12:50:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2024-07-18 12:51:50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2024-07-18 12:52:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2024-07-18 12:53:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2024-07-18 12:54:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2024-07-18 12:55:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2024-07-18 12:56:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2024-07-18 12:57:50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2024-07-18 12:58:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2024-07-18 12:59:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2024-07-18 13:00:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2024-07-18 13:01:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2024-07-18 13:02:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2024-07-18 13:03:50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       0\n",
       "0   2024-07-18 12:34:56 \n",
       "1   2024-07-18 12:35:00 \n",
       "2   2024-07-18 12:36:10 \n",
       "3   2024-07-18 12:37:22 \n",
       "4   2024-07-18 12:38:44 \n",
       "5   2024-07-18 12:39:50 \n",
       "6   2024-07-18 12:40:56 \n",
       "7   2024-07-18 12:41:00 \n",
       "8   2024-07-18 12:42:10 \n",
       "9   2024-07-18 12:43:22 \n",
       "10  2024-07-18 12:44:44 \n",
       "11  2024-07-18 12:45:50 \n",
       "12  2024-07-18 12:46:56 \n",
       "13  2024-07-18 12:47:00 \n",
       "14  2024-07-18 12:48:10 \n",
       "15  2024-07-18 12:49:22 \n",
       "16  2024-07-18 12:50:44 \n",
       "17  2024-07-18 12:51:50 \n",
       "18  2024-07-18 12:52:56 \n",
       "19  2024-07-18 12:53:00 \n",
       "20  2024-07-18 12:54:10 \n",
       "21  2024-07-18 12:55:22 \n",
       "22  2024-07-18 12:56:44 \n",
       "23  2024-07-18 12:57:50 \n",
       "24  2024-07-18 12:58:56 \n",
       "25  2024-07-18 12:59:00 \n",
       "26  2024-07-18 13:00:10 \n",
       "27  2024-07-18 13:01:22 \n",
       "28  2024-07-18 13:02:44 \n",
       "29  2024-07-18 13:03:50 "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df['로그'].str.extract(r'([\\d+\\W+]+\\d+\\W+)', expand=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98745e66",
   "metadata": {},
   "source": [
    "11. 로그 칼럼에서 한글 정보만 추출하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b10c0462",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>홍길동</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>김철수</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>이영희</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>박지성</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>최강타</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>장보고</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>홍길동</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>김철수</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>이영희</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>박지성</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>최강타</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>장보고</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>홍길동</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>김철수</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>이영희</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>박지성</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>최강타</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>장보고</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>홍길동</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>김철수</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>이영희</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>박지성</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>최강타</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>장보고</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>홍길동</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>김철수</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>이영희</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>박지성</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>최강타</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>장보고</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      0\n",
       "0   홍길동\n",
       "1   김철수\n",
       "2   이영희\n",
       "3   박지성\n",
       "4   최강타\n",
       "5   장보고\n",
       "6   홍길동\n",
       "7   김철수\n",
       "8   이영희\n",
       "9   박지성\n",
       "10  최강타\n",
       "11  장보고\n",
       "12  홍길동\n",
       "13  김철수\n",
       "14  이영희\n",
       "15  박지성\n",
       "16  최강타\n",
       "17  장보고\n",
       "18  홍길동\n",
       "19  김철수\n",
       "20  이영희\n",
       "21  박지성\n",
       "22  최강타\n",
       "23  장보고\n",
       "24  홍길동\n",
       "25  김철수\n",
       "26  이영희\n",
       "27  박지성\n",
       "28  최강타\n",
       "29  장보고"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df['로그'].str.extract(r'([가-힣]+)', expand=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c59336c8",
   "metadata": {},
   "source": [
    "12. 로그 칼럼에서 특수 문자를 제거하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "beddcf1d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     2024 07 18 12 34 56 User  홍길동 Action  Login ID...\n",
       "1     2024 07 18 12 35 00 User  김철수 Action  Purchase...\n",
       "2     2024 07 18 12 36 10 User  이영희 Action  Logout T...\n",
       "3     2024 07 18 12 37 22 User  박지성 Action  Login ID...\n",
       "4     2024 07 18 12 38 44 User  최강타 Action  Purchase...\n",
       "5     2024 07 18 12 39 50 User  장보고 Action  Logout T...\n",
       "6     2024 07 18 12 40 56 User  홍길동 Action  Purchase...\n",
       "7     2024 07 18 12 41 00 User  김철수 Action  Login ID...\n",
       "8     2024 07 18 12 42 10 User  이영희 Action  Purchase...\n",
       "9     2024 07 18 12 43 22 User  박지성 Action  Logout T...\n",
       "10    2024 07 18 12 44 44 User  최강타 Action  Login ID...\n",
       "11    2024 07 18 12 45 50 User  장보고 Action  Purchase...\n",
       "12    2024 07 18 12 46 56 User  홍길동 Action  Logout T...\n",
       "13    2024 07 18 12 47 00 User  김철수 Action  Purchase...\n",
       "14    2024 07 18 12 48 10 User  이영희 Action  Login ID...\n",
       "15    2024 07 18 12 49 22 User  박지성 Action  Purchase...\n",
       "16    2024 07 18 12 50 44 User  최강타 Action  Logout T...\n",
       "17    2024 07 18 12 51 50 User  장보고 Action  Login ID...\n",
       "18    2024 07 18 12 52 56 User  홍길동 Action  Purchase...\n",
       "19    2024 07 18 12 53 00 User  김철수 Action  Logout T...\n",
       "20    2024 07 18 12 54 10 User  이영희 Action  Purchase...\n",
       "21    2024 07 18 12 55 22 User  박지성 Action  Login ID...\n",
       "22    2024 07 18 12 56 44 User  최강타 Action  Purchase...\n",
       "23    2024 07 18 12 57 50 User  장보고 Action  Logout T...\n",
       "24    2024 07 18 12 58 56 User  홍길동 Action  Login ID...\n",
       "25    2024 07 18 12 59 00 User  김철수 Action  Purchase...\n",
       "26    2024 07 18 13 00 10 User  이영희 Action  Logout T...\n",
       "27    2024 07 18 13 01 22 User  박지성 Action  Purchase...\n",
       "28    2024 07 18 13 02 44 User  최강타 Action  Login ID...\n",
       "29    2024 07 18 13 03 50 User  장보고 Action  Purchase...\n",
       "Name: 로그, dtype: object"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df['로그'].str.extractall(r'([^a-zA-Z0-9가-힣\\s])')\n",
    "df['로그'].str.replace(r'[^a-zA-Z0-9가-힣\\s]', ' ', regex=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7952f84",
   "metadata": {},
   "source": [
    "13. 로그 칼럼에서 유저, Amount 값을 추출한 후 각 유저별 Amount의 평균값을 계산하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "edb76590",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "유저\n",
       "김철수    3666.666667\n",
       "박지성         5750.0\n",
       "이영희         4250.0\n",
       "장보고         5750.0\n",
       "최강타         3750.0\n",
       "홍길동         4250.0\n",
       "Name: amount, dtype: Float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "df_log = pd.DataFrame()\n",
    "df_log\n",
    "df_log['유저'] = df['로그'].str.extract(r'([가-힣]+)', expand=True)\n",
    "df_log['amount'] = df['로그'].str.extract(r'Amount:\\s(\\d+)',expand=True)\n",
    "df_log = df_log.dropna()\n",
    "df_log['amount'] = df_log['amount'].astype('Int64')\n",
    "df_log.groupby('유저')['amount'].mean()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python (ls-gen5)",
   "language": "python",
   "name": "ls-gen5",
   "path": "C:\\Users\\USER\\AppData\\Roaming\\jupyter\\kernels\\ls-gen5"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
