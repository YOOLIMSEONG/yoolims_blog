{
  "hash": "2744e7ab61ccb5b30a7a79678911f891",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Practice_Date and String_250722\"\nauthor: \"Seong Yoolim\"\ndate: \"2025-07-22\"\ncategories: [code, study]\n---\n\n# 날짜형, 문자형 다루기 연습 - 자전거 시스템의 대여 기록\n\n::: {#d643499d .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\n# 날짜형, 문자형 다루기 연습 - 자전거 시스템의 대여 기록\ndf = pd.read_csv('bike_data.csv')\ndf.head()\ndf.info()\n# 데이터 속성 변환\ndf = df.astype({'datetime' : 'datetime64[ns]', 'weather' : 'int64', \n                'season' : 'object', 'workingday' : 'object', \n                'holiday' : 'object'})\ndf.head()\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 435 entries, 0 to 434\nData columns (total 12 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   datetime    435 non-null    object \n 1   season      435 non-null    int64  \n 2   holiday     435 non-null    int64  \n 3   workingday  435 non-null    int64  \n 4   weather     435 non-null    int64  \n 5   temp        435 non-null    float64\n 6   atemp       435 non-null    float64\n 7   humidity    435 non-null    int64  \n 8   windspeed   435 non-null    float64\n 9   casual      435 non-null    int64  \n 10  registered  435 non-null    int64  \n 11  count       435 non-null    int64  \ndtypes: float64(3), int64(8), object(1)\nmemory usage: 40.9+ KB\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 435 entries, 0 to 434\nData columns (total 12 columns):\n #   Column      Non-Null Count  Dtype         \n---  ------      --------------  -----         \n 0   datetime    435 non-null    datetime64[ns]\n 1   season      435 non-null    object        \n 2   holiday     435 non-null    object        \n 3   workingday  435 non-null    object        \n 4   weather     435 non-null    int64         \n 5   temp        435 non-null    float64       \n 6   atemp       435 non-null    float64       \n 7   humidity    435 non-null    int64         \n 8   windspeed   435 non-null    float64       \n 9   casual      435 non-null    int64         \n 10  registered  435 non-null    int64         \n 11  count       435 non-null    int64         \ndtypes: datetime64[ns](1), float64(3), int64(5), object(3)\nmemory usage: 40.9+ KB\n```\n:::\n:::\n\n\n1.  계절(season) == 1일 때, 가장 대여량이 많은 시간대(hour)을 구하시오.\n\n::: {#3b02beb3 .cell execution_count=2}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf_season1 = df[df['season'] == 1]\ndf_season1['hour'] = df['datetime'].dt.hour\ndf_season1\n#df_season1_max = df_season1.groupby('hour')['count'].mean()\n#max_count = df_season1_max.max()\n#max_hour = df_season1_max.idxmax()\n#max(df[df['season'] == 1]['count'])\nmax_count = df_season1.loc[df_season1['count'].idxmax()]['count']\nmax_count\nmax_time = df_season1.loc[df_season1['count'].idxmax()]['datetime']\nmax_hour= max_time.hour\nmax_hour\nprint(\"count가 가장 큰 hour는\", max_hour, \"이며, 대여량은\", max_count, \"입니다.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncount가 가장 큰 hour는 17 이며, 대여량은 597 입니다.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_8640\\1410268735.py:5: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_season1['hour'] = df['datetime'].dt.hour\n```\n:::\n:::\n\n\n2.  각 계절(season)별 평균 대여량(count)을 구하시오.\n\n::: {#53689cd2 .cell execution_count=3}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf.groupby('season')['count'].mean()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nseason\n1    103.169811\n2    218.803922\n3    265.500000\n4    218.581197\nName: count, dtype: float64\n```\n:::\n:::\n\n\n3.  특정 달(month) 동안의 총 대여량(count)을 구하시오.\n\n::: {#40e9e875 .cell execution_count=4}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf['month'] = df['datetime'].dt.month\ndf.groupby('month')['count'].sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nmonth\n1      2567\n2      4849\n3      3520\n4      5911\n5     10082\n6      6325\n7      8517\n8     10480\n9     10208\n10    10574\n11     6631\n12     8369\nName: count, dtype: int64\n```\n:::\n:::\n\n\n4.  가장 대여량이 많은 날짜를 구하시오.\n\n::: {#c0624e09 .cell execution_count=5}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf['date'] = df['datetime'].dt.date\n\ndf_max_count = df.groupby('date')['count'].sum()\ndf_max_count\ndf_max_count.max()\ndf_max_count.idxmax()\nprint(\"가장 대여량이 많은 날짜는\", df_max_count.idxmax(), \"이며, 대여량은\", df_max_count.max(), \"입니다.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n가장 대여량이 많은 날짜는 2012-05-11 이며, 대여량은 1398 입니다.\n```\n:::\n:::\n\n\n5.  시간대(hour)별 평균 대여량(count)을 구하시오.\n\n::: {#bb2b5309 .cell execution_count=6}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf['hour'] = df['datetime'].dt.hour\ndf_hour_avg = df.groupby('hour')['count'].mean()\nhour = df['datetime'].dt.hour\n# 외부 배열이라도 길이가 같으면 groupby 가능\nhour = df['datetime'].dt.hour\ntype(hour)\ndf_hour_avg = df.groupby(hour)['count'].mean()\ndf_hour_avg\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\ndatetime\n0      43.500000\n1      52.714286\n2      32.842105\n3      12.000000\n4       6.687500\n5      17.750000\n6      58.705882\n7     208.937500\n8     483.055556\n9     260.117647\n10    144.130435\n11    182.000000\n12    277.533333\n13    290.600000\n14    266.842105\n15    255.666667\n16    373.052632\n17    519.200000\n18    447.769231\n19    322.103448\n20    210.083333\n21    196.619048\n22    113.560000\n23     77.352941\nName: count, dtype: float64\n```\n:::\n:::\n\n\n6.  특정 요일(weekday) 동안의 총 대여량(count)을 구하시오.\n\n::: {#9050a48b .cell execution_count=7}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf['weekday'] = df['datetime'].dt.day_name() # weekday 쓰면 숫자로 나옴\ndf\ndf_grouped = df.groupby('weekday')['count'].sum()\ndf_grouped = pd.DataFrame(df_grouped)\ndf_grouped = df_grouped.reset_index()\ndf_grouped\nweekday = df_grouped.iloc[:,0]\nweekday\ncount_weekday = df_grouped.iloc[:,1]\ncount_weekday\nfor i in range(0, 7):\n    print(f\"{weekday[i]} 동안의 총 대여량은 {count_weekday[i]} 입니다.\")\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFriday 동안의 총 대여량은 16315 입니다.\nMonday 동안의 총 대여량은 10191 입니다.\nSaturday 동안의 총 대여량은 12105 입니다.\nSunday 동안의 총 대여량은 11066 입니다.\nThursday 동안의 총 대여량은 13319 입니다.\nTuesday 동안의 총 대여량은 11198 입니다.\nWednesday 동안의 총 대여량은 13839 입니다.\n```\n:::\n:::\n\n\n7.   주어진 Bike Sharing 데이터를 사용하여 넓은 형식(wide format)에서 긴 형식(long format)으로 변환하시오. casual과 registered 열을 하나의 열로 변환하고, 각 기록의 대여 유형과 대여 수를 포함하는 긴 형식 데이터프레임을 만드시오.\n\n::: {#457148c9 .cell execution_count=8}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf_long = df.melt(value_vars=['casual', 'registered'],\n        id_vars=['datetime','season'],\n        var_name='대여 유형',\n        value_name='대여 수'\n        )\ndf_long\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>datetime</th>\n      <th>season</th>\n      <th>대여 유형</th>\n      <th>대여 수</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2011-09-05 17:00:00</td>\n      <td>3</td>\n      <td>casual</td>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2011-05-17 11:00:00</td>\n      <td>2</td>\n      <td>casual</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2011-11-10 09:00:00</td>\n      <td>4</td>\n      <td>casual</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2011-10-13 07:00:00</td>\n      <td>4</td>\n      <td>casual</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2011-10-15 14:00:00</td>\n      <td>4</td>\n      <td>casual</td>\n      <td>242</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>865</th>\n      <td>2011-04-07 16:00:00</td>\n      <td>2</td>\n      <td>registered</td>\n      <td>161</td>\n    </tr>\n    <tr>\n      <th>866</th>\n      <td>2011-09-03 22:00:00</td>\n      <td>3</td>\n      <td>registered</td>\n      <td>96</td>\n    </tr>\n    <tr>\n      <th>867</th>\n      <td>2011-11-12 22:00:00</td>\n      <td>4</td>\n      <td>registered</td>\n      <td>88</td>\n    </tr>\n    <tr>\n      <th>868</th>\n      <td>2012-04-11 23:00:00</td>\n      <td>2</td>\n      <td>registered</td>\n      <td>52</td>\n    </tr>\n    <tr>\n      <th>869</th>\n      <td>2012-01-06 09:00:00</td>\n      <td>1</td>\n      <td>registered</td>\n      <td>237</td>\n    </tr>\n  </tbody>\n</table>\n<p>870 rows × 4 columns</p>\n</div>\n```\n:::\n:::\n\n\n8.  이전에 생성한 긴 형식 데이터프레임을 활용하여 각 계절(season)별로 casual과 registered 사용자의 평균 대여 수(count)를 구하시오.\n\n::: {#01d22e8d .cell execution_count=9}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf_long_pivot = df_long.pivot_table(\n    index=\"season\",\n    values='대여 수',\n    columns='대여 유형',\n    aggfunc='mean'\n).reset_index()\ndf_long_pivot\ndf_pivot = df_long_pivot.melt(\n    value_vars=['casual', 'registered'],\n    var_name='user_type',\n    value_name='user_count',\n    id_vars='season'\n)\ndf_pivot.sort_values('season')\n# groupby\n# df8.groupby(['season','user_type'])['user_count'].mean().reset_index()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>season</th>\n      <th>user_type</th>\n      <th>user_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>casual</td>\n      <td>14.122642</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>registered</td>\n      <td>89.047170</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2</td>\n      <td>registered</td>\n      <td>169.813725</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>casual</td>\n      <td>48.990196</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3</td>\n      <td>registered</td>\n      <td>210.372727</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>casual</td>\n      <td>55.127273</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>casual</td>\n      <td>29.709402</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>4</td>\n      <td>registered</td>\n      <td>188.871795</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n# 앱 로그 데이터\n\n::: {#855e8535 .cell execution_count=10}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\n\n# 앱 로그 데이터\npd.set_option('display.max_columns', None) # 전체 칼럼 정보 프린트 옵션\ndf = pd.read_csv('logdata.csv')\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>로그</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2024-07-18 12:34:56 User: 홍길동 Action: Login ID...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2024-07-18 12:35:00 User: 김철수 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2024-07-18 12:36:10 User: 이영희 Action: Logout T...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2024-07-18 12:37:22 User: 박지성 Action: Login ID...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2024-07-18 12:38:44 User: 최강타 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2024-07-18 12:39:50 User: 장보고 Action: Logout T...</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2024-07-18 12:40:56 User: 홍길동 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2024-07-18 12:41:00 User: 김철수 Action: Login ID...</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2024-07-18 12:42:10 User: 이영희 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2024-07-18 12:43:22 User: 박지성 Action: Logout T...</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2024-07-18 12:44:44 User: 최강타 Action: Login ID...</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2024-07-18 12:45:50 User: 장보고 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>2024-07-18 12:46:56 User: 홍길동 Action: Logout T...</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>2024-07-18 12:47:00 User: 김철수 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>2024-07-18 12:48:10 User: 이영희 Action: Login ID...</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>2024-07-18 12:49:22 User: 박지성 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>2024-07-18 12:50:44 User: 최강타 Action: Logout T...</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>2024-07-18 12:51:50 User: 장보고 Action: Login ID...</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>2024-07-18 12:52:56 User: 홍길동 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>2024-07-18 12:53:00 User: 김철수 Action: Logout T...</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>2024-07-18 12:54:10 User: 이영희 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>2024-07-18 12:55:22 User: 박지성 Action: Login ID...</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>2024-07-18 12:56:44 User: 최강타 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>2024-07-18 12:57:50 User: 장보고 Action: Logout T...</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>2024-07-18 12:58:56 User: 홍길동 Action: Login ID...</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>2024-07-18 12:59:00 User: 김철수 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>2024-07-18 13:00:10 User: 이영희 Action: Logout T...</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>2024-07-18 13:01:22 User: 박지성 Action: Purchase...</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>2024-07-18 13:02:44 User: 최강타 Action: Login ID...</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>2024-07-18 13:03:50 User: 장보고 Action: Purchase...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n9.  로그 칼럼에서 숫자 정보만 추출하시오.\n\n::: {#6f27c758 .cell execution_count=11}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\n# df['로그'].str.extract(r'([\\d+\\W+]+[\\d+\\W+]+[\\d+])', expand=True)\ndf['로그'].str.extract(r'(\\d{4})-(\\d{2})-(\\d{2})\\s+(\\d{2}):(\\d{2}):(\\d{2}).*?(\\d+)', expand=True)\ndf_num = df['로그'].str.extractall(r'(\\d+)')\n# chat gpt\ndf_num = df_num.groupby(level=0).agg(list)\ndf_num\ndf_num[0].apply(pd.Series)\n\n#'(\\d{4})-(\\d{2})-(\\d{2})\\s+(\\d{2}):(\\d{2}):(\\d{2}).*?(\\d+)'\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>34</td>\n      <td>56</td>\n      <td>12345</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>35</td>\n      <td>00</td>\n      <td>2000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>36</td>\n      <td>10</td>\n      <td>30</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>37</td>\n      <td>22</td>\n      <td>67890</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>38</td>\n      <td>44</td>\n      <td>1500</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>39</td>\n      <td>50</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>40</td>\n      <td>56</td>\n      <td>3500</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>41</td>\n      <td>00</td>\n      <td>23456</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>42</td>\n      <td>10</td>\n      <td>3000</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>43</td>\n      <td>22</td>\n      <td>45</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>44</td>\n      <td>44</td>\n      <td>78901</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>45</td>\n      <td>50</td>\n      <td>4000</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>46</td>\n      <td>56</td>\n      <td>35</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>47</td>\n      <td>00</td>\n      <td>2500</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>48</td>\n      <td>10</td>\n      <td>56789</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>49</td>\n      <td>22</td>\n      <td>4500</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>50</td>\n      <td>44</td>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>51</td>\n      <td>50</td>\n      <td>34567</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>52</td>\n      <td>56</td>\n      <td>5000</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>53</td>\n      <td>00</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>54</td>\n      <td>10</td>\n      <td>5500</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>55</td>\n      <td>22</td>\n      <td>12346</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>56</td>\n      <td>44</td>\n      <td>6000</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>57</td>\n      <td>50</td>\n      <td>55</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>58</td>\n      <td>56</td>\n      <td>67891</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>12</td>\n      <td>59</td>\n      <td>00</td>\n      <td>6500</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>13</td>\n      <td>00</td>\n      <td>10</td>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>13</td>\n      <td>01</td>\n      <td>22</td>\n      <td>7000</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>13</td>\n      <td>02</td>\n      <td>44</td>\n      <td>78902</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>2024</td>\n      <td>07</td>\n      <td>18</td>\n      <td>13</td>\n      <td>03</td>\n      <td>50</td>\n      <td>7500</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n10. 로그 칼럼에서 모든 시간 정보를 추출하시오.\n\n::: {#e8d23995 .cell execution_count=12}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf['로그'].str.extract(r'([\\d+\\W+]+\\d+\\W+)', expand=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2024-07-18 12:34:56</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2024-07-18 12:35:00</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2024-07-18 12:36:10</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2024-07-18 12:37:22</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2024-07-18 12:38:44</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2024-07-18 12:39:50</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2024-07-18 12:40:56</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2024-07-18 12:41:00</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2024-07-18 12:42:10</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2024-07-18 12:43:22</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2024-07-18 12:44:44</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2024-07-18 12:45:50</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>2024-07-18 12:46:56</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>2024-07-18 12:47:00</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>2024-07-18 12:48:10</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>2024-07-18 12:49:22</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>2024-07-18 12:50:44</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>2024-07-18 12:51:50</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>2024-07-18 12:52:56</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>2024-07-18 12:53:00</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>2024-07-18 12:54:10</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>2024-07-18 12:55:22</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>2024-07-18 12:56:44</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>2024-07-18 12:57:50</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>2024-07-18 12:58:56</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>2024-07-18 12:59:00</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>2024-07-18 13:00:10</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>2024-07-18 13:01:22</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>2024-07-18 13:02:44</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>2024-07-18 13:03:50</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n11. 로그 칼럼에서 한글 정보만 추출하시오.\n\n::: {#50a063c8 .cell execution_count=13}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf['로그'].str.extract(r'([가-힣]+)', expand=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>홍길동</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>김철수</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>이영희</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>박지성</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>최강타</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>장보고</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>홍길동</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>김철수</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>이영희</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>박지성</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>최강타</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>장보고</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>홍길동</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>김철수</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>이영희</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>박지성</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>최강타</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>장보고</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>홍길동</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>김철수</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>이영희</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>박지성</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>최강타</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>장보고</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>홍길동</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>김철수</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>이영희</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>박지성</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>최강타</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>장보고</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n12. 로그 칼럼에서 특수 문자를 제거하시오.\n\n::: {#b86fdb35 .cell execution_count=14}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf['로그'].str.extractall(r'([^a-zA-Z0-9가-힣\\s])')\ndf['로그'].str.replace(r'[^a-zA-Z0-9가-힣\\s]', ' ', regex=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\n0     2024 07 18 12 34 56 User  홍길동 Action  Login ID...\n1     2024 07 18 12 35 00 User  김철수 Action  Purchase...\n2     2024 07 18 12 36 10 User  이영희 Action  Logout T...\n3     2024 07 18 12 37 22 User  박지성 Action  Login ID...\n4     2024 07 18 12 38 44 User  최강타 Action  Purchase...\n5     2024 07 18 12 39 50 User  장보고 Action  Logout T...\n6     2024 07 18 12 40 56 User  홍길동 Action  Purchase...\n7     2024 07 18 12 41 00 User  김철수 Action  Login ID...\n8     2024 07 18 12 42 10 User  이영희 Action  Purchase...\n9     2024 07 18 12 43 22 User  박지성 Action  Logout T...\n10    2024 07 18 12 44 44 User  최강타 Action  Login ID...\n11    2024 07 18 12 45 50 User  장보고 Action  Purchase...\n12    2024 07 18 12 46 56 User  홍길동 Action  Logout T...\n13    2024 07 18 12 47 00 User  김철수 Action  Purchase...\n14    2024 07 18 12 48 10 User  이영희 Action  Login ID...\n15    2024 07 18 12 49 22 User  박지성 Action  Purchase...\n16    2024 07 18 12 50 44 User  최강타 Action  Logout T...\n17    2024 07 18 12 51 50 User  장보고 Action  Login ID...\n18    2024 07 18 12 52 56 User  홍길동 Action  Purchase...\n19    2024 07 18 12 53 00 User  김철수 Action  Logout T...\n20    2024 07 18 12 54 10 User  이영희 Action  Purchase...\n21    2024 07 18 12 55 22 User  박지성 Action  Login ID...\n22    2024 07 18 12 56 44 User  최강타 Action  Purchase...\n23    2024 07 18 12 57 50 User  장보고 Action  Logout T...\n24    2024 07 18 12 58 56 User  홍길동 Action  Login ID...\n25    2024 07 18 12 59 00 User  김철수 Action  Purchase...\n26    2024 07 18 13 00 10 User  이영희 Action  Logout T...\n27    2024 07 18 13 01 22 User  박지성 Action  Purchase...\n28    2024 07 18 13 02 44 User  최강타 Action  Login ID...\n29    2024 07 18 13 03 50 User  장보고 Action  Purchase...\nName: 로그, dtype: object\n```\n:::\n:::\n\n\n13. 로그 칼럼에서 유저, Amount 값을 추출한 후 각 유저별 Amount의 평균값을 계산하시오.\n\n::: {#3b4e575b .cell execution_count=15}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf_log = pd.DataFrame()\ndf_log\ndf_log['유저'] = df['로그'].str.extract(r'([가-힣]+)', expand=True)\ndf_log['amount'] = df['로그'].str.extract(r'Amount:\\s(\\d+)',expand=True)\ndf_log = df_log.dropna()\ndf_log['amount'] = df_log['amount'].astype('Int64')\ndf_log.groupby('유저')['amount'].mean()\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\n유저\n김철수    3666.666667\n박지성         5750.0\n이영희         4250.0\n장보고         5750.0\n최강타         3750.0\n홍길동         4250.0\nName: amount, dtype: Float64\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}